name: Test Helm Charts

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - "helm/**"

jobs:
  # Job to detect which charts have changed
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      charts: ${{ steps.changes.outputs.charts }}
      infra-charts: ${{ steps.changes.outputs.infra-charts }}
      app-charts: ${{ steps.changes.outputs.app-charts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed charts
        id: changes
        run: |
          # Get list of changed files
          changed_files=$(git diff --name-only HEAD~1 HEAD 2>/dev/null || git diff --name-only origin/main...HEAD)
          infra_charts=""
          app_charts=""

          # Check infrastructure charts
          for chart in mongo redis weaviate supabase nginx; do
            if echo "$changed_files" | grep -q "helm/infra/$chart/"; then
              infra_charts="$infra_charts $chart"
            fi
          done

          # Check application charts
          for chart in stackend stackweb celery repl; do
            if echo "$changed_files" | grep -q "helm/app/$chart/"; then
              app_charts="$app_charts $chart"
            fi
          done

          # If no specific charts changed, test all charts
          if [[ -z "$infra_charts" && -z "$app_charts" ]]; then
            infra_charts="mongo redis weaviate supabase nginx"
            app_charts="stackend stackweb celery repl"
          fi

          # Combine all charts
          all_charts="$infra_charts $app_charts"
          all_charts=$(echo $all_charts | xargs) # trim whitespace

          echo "charts=$all_charts" >> $GITHUB_OUTPUT
          echo "infra-charts=$infra_charts" >> $GITHUB_OUTPUT
          echo "app-charts=$app_charts" >> $GITHUB_OUTPUT

  # Job to test infrastructure charts
  test-infra:
    needs: detect-changes
    if: needs.detect-changes.outputs.infra-charts != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart: ${{ fromJson(needs.detect-changes.outputs.infra-charts) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.0

      - name: Test ${{ matrix.chart }} chart
        run: |
          echo "Testing infrastructure chart: ${{ matrix.chart }}"

          # Lint the chart
          helm lint helm/infra/${{ matrix.chart }}

          # Test template rendering
          helm template ${{ matrix.chart }} helm/infra/${{ matrix.chart }} --debug

          # Test with different value sets
          if [[ -f "examples/values/dev/${{ matrix.chart }}-local.yaml" ]]; then
            echo "Testing with dev values..."
            helm template ${{ matrix.chart }} helm/infra/${{ matrix.chart }} -f examples/values/dev/${{ matrix.chart }}-local.yaml
          fi

          if [[ -f "examples/values/prod/${{ matrix.chart }}-production.yaml" ]]; then
            echo "Testing with prod values..."
            helm template ${{ matrix.chart }} helm/infra/${{ matrix.chart }} -f examples/values/prod/${{ matrix.chart }}-production.yaml
          fi

          echo "âœ… ${{ matrix.chart }} chart tests passed"

  # Job to test application charts
  test-app:
    needs: detect-changes
    if: needs.detect-changes.outputs.app-charts != ''
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chart: ${{ fromJson(needs.detect-changes.outputs.app-charts) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.0

      - name: Test ${{ matrix.chart }} chart
        run: |
          echo "Testing application chart: ${{ matrix.chart }}"

          # Lint the chart
          helm lint helm/app/${{ matrix.chart }}

          # Test template rendering
          helm template ${{ matrix.chart }} helm/app/${{ matrix.chart }} --debug

          # Test with different value sets
          if [[ -f "examples/values/dev/${{ matrix.chart }}-local.yaml" ]]; then
            echo "Testing with dev values..."
            helm template ${{ matrix.chart }} helm/app/${{ matrix.chart }} -f examples/values/dev/${{ matrix.chart }}-local.yaml
          fi

          if [[ -f "examples/values/prod/${{ matrix.chart }}-production.yaml" ]]; then
            echo "Testing with prod values..."
            helm template ${{ matrix.chart }} helm/app/${{ matrix.chart }} -f examples/values/prod/${{ matrix.chart }}-production.yaml
          fi

          echo "âœ… ${{ matrix.chart }} chart tests passed"

  # Job to run comprehensive tests
  test-charts:
    needs: [detect-changes, test-infra, test-app]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.0

      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files --verbose
        env:
          SKIP: no-commit-to-branch

      - name: Run version checks
        run: |
          echo "Running version checks..."
          if [[ -f "scripts/version/version-check.sh" ]]; then
            chmod +x scripts/version/version-check.sh
            scripts/version/version-check.sh check || true
          fi

      - name: Test chart packaging
        run: |
          echo "Testing chart packaging..."
          if [[ -f "scripts/release/release-charts.sh" ]]; then
            chmod +x scripts/release/release-charts.sh
            scripts/release/release-charts.sh validate || true
          fi

      - name: Send Test Summary
        uses: peter-evans/create-or-update-comment@v4
        with:
          body: |
            ## ðŸ§ª Helm Charts Test Summary
            ### Infrastructure Charts Tested:
            ${needs.detect-changes.outputs.infra-charts}
            ### Application Charts Tested:
            ${needs.detect-changes.outputs.app-charts}
            ### Test Results:
            - âœ… Chart linting passed
            - âœ… Template rendering passed
            - âœ… Value file testing passed
            - âœ… YAML linting completed
