# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Celery Broker Configuration (Redis)
broker:
  enabled: true
  image:
    repository: redis
    tag: 7.2-alpine
    pullPolicy: IfNotPresent

  # Replica Configuration
  replicaCount: 1

  # Service Configuration
  service:
    type: ClusterIP
    ports:
      redis: 6379

  # Resources
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 256Mi
      cpu: 200m

  # Security Context
  securityContext:
    enabled: true
    runAsUser: 999
    runAsGroup: 999
    runAsNonRoot: true
    fsGroup: 999

  # Pod Security Context
  podSecurityContext:
    enabled: true
    runAsUser: 999
    runAsGroup: 999
    runAsNonRoot: true
    fsGroup: 999

  # Node Selector
  nodeSelector: {}

  # Tolerations
  tolerations: []

  # Affinity
  affinity: {}

# Celery Worker Configuration
worker:
  enabled: true
  image:
    repository: "your-acr.azurecr.io/stackai/celery-worker"
    tag: "latest"
    pullPolicy: IfNotPresent

  # Replica Configuration
  replicaCount: 2

  # Resources
  resources:
    requests:
      memory: 256Mi
      cpu: 200m
    limits:
      memory: 512Mi
      cpu: 500m

  # Environment Configuration
  env:
    # Application settings
    CELERY_BROKER_URL: "redis://celery-broker:6379/0"
    CELERY_RESULT_BACKEND: "redis://celery-broker:6379/0"

    # External secrets configuration
    secrets:
      # Use external secrets from Azure Key Vault
      useExternalSecrets: true
      # External secret name
      externalSecretName: "celery-secrets"
      # Secret store class
      secretStoreClass: "azure-keyvault"
      # Secret store name
      secretStoreName: "azure-keyvault-store"

  # Security Context
  securityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    fsGroup: 1000

  # Pod Security Context
  podSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    fsGroup: 1000

  # Node Selector
  nodeSelector: {}

  # Tolerations
  tolerations: []

  # Affinity
  affinity: {}

  # Liveness and Readiness Probes
  livenessProbe:
    enabled: true
    exec:
      command:
        - celery
        - -A
        - tasks
        - inspect
        - ping
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    enabled: true
    exec:
      command:
        - celery
        - -A
        - tasks
        - inspect
        - ping
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

# External Secrets Configuration
externalSecrets:
  enabled: true
  # External secret store configuration
  secretStore:
    name: "azure-keyvault-store"
    class: "azure-keyvault"
    # Azure Key Vault configuration
    vaultUrl: "https://your-keyvault.vault.azure.net/"
    tenantId: "your-tenant-id"
    # Service principal for authentication
    servicePrincipal:
      clientId: "your-client-id"
      # Use external secret for client secret
      clientSecretRef:
        name: "azure-keyvault-credentials"
        key: "client-secret"

# Extra objects to be created
extraObjects: []
