# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Temporal Server Configuration
temporal:
  enabled: true
  image:
    repository: "temporalio/auto-setup"
    tag: "1.24.2"
    pullPolicy: IfNotPresent

  # Replica Configuration
  replicaCount: 1

  # Service Configuration
  service:
    type: ClusterIP
    ports:
      frontend: 7233
      web: 8080

  # Resources
  resources:
    requests:
      memory: 512Mi
      cpu: 200m
    limits:
      memory: 1Gi
      cpu: 1000m

  # Environment Configuration
  env:
    # Database settings
    DB: "postgres12"
    DB_PORT: "5432"
    POSTGRES_USER: "temporal"
    POSTGRES_PWD: ""
    POSTGRES_SEEDS: ""
    SKIP_SCHEMA_SETUP: "true"
    ENABLE_ES: "false"
    ES_SEEDS: ""
    ES_VERSION: "v7"

    # External secrets configuration
    secrets:
      # Use external secrets from Azure Key Vault
      useExternalSecrets: true
      # External secret name
      externalSecretName: "temporal-secrets"
      # Secret store class
      secretStoreClass: "azure-keyvault"
      # Secret store name
      secretStoreName: "azure-keyvault-store"

  # Security Context
  securityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    fsGroup: 1000

  # Pod Security Context
  podSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    fsGroup: 1000

  # Node Selector
  nodeSelector: {}

  # Tolerations
  tolerations: []

  # Affinity
  affinity: {}

  # Liveness and Readiness Probes
  livenessProbe:
    enabled: true
    httpGet:
      path: /
      port: web
      scheme: HTTP
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    enabled: true
    httpGet:
      path: /
      port: web
      scheme: HTTP
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1


# Temporal Web UI Configuration
temporalWeb:
  enabled: true
  image:
    repository: "temporalio/ui"
    tag: "2.29.0"
    pullPolicy: IfNotPresent

  # Replica Configuration
  replicaCount: 1

  # Service Configuration
  service:
    type: ClusterIP
    ports:
      http: 8088

  # Resources
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 256Mi
      cpu: 200m

  # Environment Configuration
  env:
    TEMPORAL_ADDRESS: "temporal-server:7233"
    TEMPORAL_CORS_ORIGINS: "http://localhost:3000"

  # Security Context
  securityContext:
    enabled: false

  # Pod Security Context
  podSecurityContext:
    enabled: false

  # Node Selector
  nodeSelector: {}

  # Tolerations
  tolerations: []

  # Affinity
  affinity: {}

  # Liveness and Readiness Probes
  livenessProbe:
    enabled: true
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    enabled: true
    httpGet:
      path: /
      port: http
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

# Ingress Configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: temporal.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: temporal-tls
      hosts:
        - temporal.yourdomain.com

# External Secrets Configuration
externalSecrets:
  enabled: true
  # External secret store configuration
  secretStore:
    name: "azure-keyvault-store"
    class: "azure-keyvault"
    # Azure Key Vault configuration
    vaultUrl: "https://your-keyvault.vault.azure.net/"
    tenantId: "your-tenant-id"
    # Service principal for authentication
    servicePrincipal:
      clientId: "your-client-id"
      # Use external secret for client secret
      clientSecretRef:
        name: "azure-keyvault-credentials"
        key: "client-secret"

# Extra objects to be created
extraObjects: []
