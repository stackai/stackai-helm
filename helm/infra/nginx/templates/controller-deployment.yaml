{{- if .Values.controller.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-ingress.controller" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "nginx-ingress.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicaCount }}
  selector:
    matchLabels:
      {{- include "nginx-ingress.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        {{- include "nginx-ingress.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: controller
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"
        prometheus.io/scheme: "http"
    spec:
      {{- if .Values.controller.hostNetwork }}
      hostNetwork: true
      dnsPolicy: {{ .Values.controller.dnsPolicy | default "ClusterFirstWithHostNet" }}
      {{- end }}
      {{- with .Values.serviceAccount.create }}
      serviceAccountName: {{ include "nginx-ingress.serviceAccountName" $ }}
      {{- end }}
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: controller
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          {{- with .Values.controller.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - /nginx-ingress-controller
            - --election-id=ingress-controller-leader
            - --ingress-class={{ .Values.controller.ingressClass }}
            - --configmap=$(POD_NAMESPACE)/{{ include "nginx-ingress.controller" . }}-config
            - --tcp-services-configmap=$(POD_NAMESPACE)/{{ include "nginx-ingress.controller" . }}-tcp
            - --udp-services-configmap=$(POD_NAMESPACE)/{{ include "nginx-ingress.controller" . }}-udp
            {{- if .Values.defaultBackend.enabled }}
            - --default-backend-service=$(POD_NAMESPACE)/{{ include "nginx-ingress.defaultBackend" . }}
            {{- end }}
            {{- if .Values.controller.admissionWebhooks.enabled }}
            - --validating-webhook=:8443
            - --validating-webhook-certificate=/usr/local/certificates/cert
            - --validating-webhook-key=/usr/local/certificates/key
            {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_PRELOAD
              value: /usr/local/lib/libmimalloc.so
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            {{- if .Values.controller.admissionWebhooks.enabled }}
            - name: webhook
              containerPort: 8443
              protocol: TCP
            {{- end }}
            - name: metrics
              containerPort: 10254
              protocol: TCP
          {{- with .Values.controller.livenessProbe }}
          {{- if .enabled }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .Values.controller.readinessProbe }}
          {{- if .enabled }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          volumeMounts:
            {{- if .Values.controller.admissionWebhooks.enabled }}
            - name: webhook-cert
              mountPath: /usr/local/certificates/
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
      volumes:
        {{- if .Values.controller.admissionWebhooks.enabled }}
        - name: webhook-cert
          secret:
            secretName: {{ include "nginx-ingress.controller" . }}-admission
        {{- end }}
{{- end }}
