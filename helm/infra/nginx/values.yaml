# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Nginx Ingress Controller Configuration
controller:
  enabled: true
  image:
    repository: registry.k8s.io/ingress-nginx/controller
    tag: v1.9.4
    pullPolicy: IfNotPresent

  # Replica Configuration
  replicaCount: 1

  # Service Configuration
  service:
    type: LoadBalancer
    ports:
      http: 80
      https: 443
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      service.beta.kubernetes.io/azure-load-balancer-internal-subnet: "subnet-name"

  # Ingress Class Configuration
  ingressClassResource:
    name: nginx
    enabled: true
    default: true
    controllerValue: "k8s.io/ingress-nginx"

  # Ingress Class Name
  ingressClass: nginx

  # Controller Configuration
  config:
    # Enable access logs
    enable-access-log-for-default-backend: "true"
    # Custom headers
    add-forwarded-for-headers: "true"
    # SSL configuration
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-SHA,ECDHE-RSA-AES256-SHA,ECDHE-RSA-AES128-SHA256,ECDHE-RSA-AES256-SHA384,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-SHA256,ECDHE-RSA-AES256-SHA384"
    # Client body size
    client-body-buffer-size: "128k"
    client-header-buffer-size: "1k"
    large-client-header-buffers: "4 4k"
    # Proxy configuration
    proxy-connect-timeout: "60"
    proxy-send-timeout: "60"
    proxy-read-timeout: "60"
    proxy-buffer-size: "4k"
    proxy-buffers: "4 32k"
    proxy-busy-buffers-size: "8k"
    # Rate limiting
    rate-limit: "100"
    rate-limit-window: "1m"

  # Resources
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 500m

  # Security Context
  securityContext:
    enabled: true
    runAsUser: 101
    runAsGroup: 101
    runAsNonRoot: true
    fsGroup: 65534

  # Pod Security Context
  podSecurityContext:
    enabled: true
    runAsUser: 101
    runAsGroup: 101
    runAsNonRoot: true
    fsGroup: 65534

  # Node Selector
  nodeSelector: {}

  # Tolerations
  tolerations: []

  # Affinity
  affinity: {}

  # Liveness and Readiness Probes
  livenessProbe:
    enabled: true
    httpGet:
      path: /healthz
      port: 10254
      scheme: HTTP
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 5
    successThreshold: 1

  readinessProbe:
    enabled: true
    httpGet:
      path: /healthz
      port: 10254
      scheme: HTTP
    initialDelaySeconds: 0
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1

# Default Backend Configuration
defaultBackend:
  enabled: true
  image:
    repository: registry.k8s.io/defaultbackend-amd64
    tag: "1.5"
    pullPolicy: IfNotPresent

  # Resources
  resources:
    requests:
      memory: 32Mi
      cpu: 10m
    limits:
      memory: 64Mi
      cpu: 50m

  # Security Context
  securityContext:
    enabled: true
    runAsUser: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    fsGroup: 65534

  # Pod Security Context
  podSecurityContext:
    enabled: true
    runAsUser: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    fsGroup: 65534

# RBAC Configuration
rbac:
  create: true

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Service Routing Configuration
serviceRouting:
  enabled: true
  # Enable routing for all services through NGINX
  services:
    argocd:
      enabled: true
      path: /argocd
      service: argocd-server
      port: 80
    supabase:
      enabled: true
      studio:
        path: /supabase/studio
        service: supabase-studio
        port: 3000
      api:
        path: /supabase/rest
        service: supabase-kong
        port: 8000
      auth:
        path: /supabase/auth
        service: supabase-kong
        port: 8000
      realtime:
        path: /supabase/realtime
        service: supabase-kong
        port: 8000
      graphql:
        path: /supabase/graphql
        service: supabase-kong
        port: 8000
      storage:
        path: /supabase/storage
        service: supabase-kong
        port: 8000
      functions:
        path: /supabase/functions
        service: supabase-kong
        port: 8000
    temporal:
      enabled: true
      path: /temporal
      service: temporal-web
      port: 8088
    unstructured:
      enabled: true
      path: /unstructured
      service: unstructured
      port: 8000
    weaviate:
      enabled: true
      path: /weaviate
      service: weaviate
      port: 8080
    mongodb:
      enabled: true
      path: /mongodb
      service: mongodb
      port: 27017
    redis:
      enabled: true
      path: /redis
      service: redis
      port: 6379
    postgres:
      enabled: true
      path: /postgres
      service: postgres
      port: 5432

# Extra objects to be created
extraObjects: []
