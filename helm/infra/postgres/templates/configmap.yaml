{{- if .Values.postgres.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "postgres.fullname" . }}-init
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
data:
  init-db.sql: |
    -- Create the temporal database if it doesn't exist
    CREATE DATABASE temporal;

    -- Create the temporal user if it doesn't exist
    DO $$
    BEGIN
        IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'temporal') THEN
            CREATE ROLE temporal LOGIN PASSWORD 'temporal-dev-password';
        END IF;
    END
    $$;

    -- Grant all privileges on the temporal database to the temporal user
    GRANT ALL PRIVILEGES ON DATABASE temporal TO temporal;

    -- Connect to the temporal database and grant schema privileges
    \c temporal;
    GRANT ALL ON SCHEMA public TO temporal;
    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO temporal;
    GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO temporal;

    -- Set default privileges for future objects
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO temporal;
    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO temporal;
{{- end }}
