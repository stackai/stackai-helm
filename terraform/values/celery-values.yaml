worker:
  enabled: true
  image:
    repository: "stackai.azurecr.io/stackai/stackend-celery-worker"
    tag: "v1.0.0"
    pullPolicy: IfNotPresent

  # Image pull secrets for private registry
  imagePullSecrets:
    - name: acr-secret

  # Replica Configuration
  replicaCount: 1

  # Service Configuration
  service:
    type: ClusterIP
    ports:
      http: 8002

  # Resources - Increased for macOS local development
  resources:
    requests:
      memory: 1Gi
      cpu: 200m
    limits:
      memory: 2Gi
      cpu: 1000m

  # Environment Configuration
  env:
    # Basic configurations
    ALLOW_PARALLEL_FLOW_EXECUTION: "TRUE"
    APIFY_MAX_CRAWL_DEPTH: "2"
    DEPLOYMENT_ENVIRONMENT: "production_stackend"
    ENVIRONMENT: "DEVELOPMENT"
    NUM_WORKERS: "1"

    # Stackend service URLs
    INDEXING_API_URL: "http://stackend.localhost"
    STACKEND_API_URL: "http://stackend.localhost"
    STACKWEB_URL: "http://stackweb.localhost"

    # License
    STACKAI_LICENCE: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRfbmFtZSI6InN0YWNrYWkiLCJleHBpcnlfZGF0ZSI6IjIwMzQtMTAtMjJUMTI6NTY6NDIuMDIyMDA0WiJ9.3ZiCrSaQO6i4NQYFAnen9RkbgmxGu5TEQnMQ8uw7t_4"

    # Celery
    CELERY_BACKEND_URL: "redis://redis.stackai-data.svc.cluster.local:6379"
    CELERY_BROKER_URL: "redis://redis.stackai-data.svc.cluster.local:6379"

    # Supabase
    supabase_encryption_key: "stackai-dev-jwt-secret-with-at-least-32-characters-long"
    SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0"
    SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU"
    SUPABASE_URL: "http://supabase.localhost"

    # Weaviate
    WEAVIATE_KEY: ""
    WEAVIATE_URL: "http://weaviate.localhost"

    # MongoDB
    MONGODB_URI: "mongodb://admin:stackai-dev-password@mongodb.stackai-data.svc.cluster.local:27017/admin"

    # Unstructured
    UNSTRUCTURED_API_KEY: ""
    UNSTRUCTURED_URL: "http://unstructured.localhost"

    # Redis
    REDIS_URL: "redis://redis.stackai-data.svc.cluster.local:6379"

    # Repl
    REPL_URL: "http://repl-api.localhost/execute_code/"

    # Postgres
    POSTGRES_DB_HOST: "supabase.stackai-data.svc.cluster.local"
    POSTGRES_DB_NAME: "postgres"
    POSTGRES_DB_PASSWORD: "stackai-dev-postgres-password"
    POSTGRES_DB_PORT: "5432"
    POSTGRES_DB_USER: "supabase"

    # External secrets configuration - DISABLED for development
    secrets:
      useExternalSecrets: false
  # Security Context
  securityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true

  # Pod Security Context
  podSecurityContext:
    enabled: true
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    fsGroup: 1000

  # Node Selector
  nodeSelector: {}

  # Tolerations
  tolerations: []

  # Affinity
  affinity: {}

  # Liveness and Readiness Probes
  livenessProbe:
    enabled: true
    exec:
      command:
        - celery
        - -A
        - tasks
        - inspect
        - ping
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    enabled: true
    exec:
      command:
        - celery
        - -A
        - tasks
        - inspect
        - ping
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

# Ingress Configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: celery.localhost
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: celery-tls
      hosts:
        - celery.localhost

# External Secrets Configuration - DISABLED for development
externalSecrets:
  enabled: false

# Extra objects to be created
extraObjects: []
